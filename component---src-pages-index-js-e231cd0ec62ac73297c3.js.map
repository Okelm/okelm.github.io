{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./content/assets/profile-pic.jpg"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","react_cookie_consent__WEBPACK_IMPORTED_MODULE_7___default","style","background","fontFamily","fontSize","buttonText","contentStyle","flex","margin","buttonStyle","borderRadius","backgroundColor","color","_components_bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_1__","typography__WEBPACK_IMPORTED_MODULE_1___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_2__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_2___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","a.anchor","googleFonts","typography","Typography","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_2___default","Object","assign","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","marginLeft","marginRight","maxWidth","padding","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","bioQuery","Bio","_data$site$siteMetada","social","display","src","profilePic","alt","width","height","href","twitter","_public_static_d_4007731267_json__WEBPACK_IMPORTED_MODULE_0__","module","exports","p"],"mappings":"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","file":"component---src-pages-index-js-e231cd0ec62ac73297c3.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport CookieConsent from \"react-cookie-consent\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`bart`, `bartek`, `widlarz`, `bart widlarz`, `bartek widlarz`]}\n        />\n        <CookieConsent\n          style={{ background: \"linear-gradient(to bottom, grey , #2B373B, #2B373B, #2B373B, #2B373B, #2B373B)\", fontFamily: `Montserrat`, fontSize: \"13px\"}}\n          buttonText=\"ok\"\n          contentStyle={{  flex: \"1 200px\", margin: \"10px\" }}\n          buttonStyle={{ borderRadius: \"15px\", backgroundColor: '#007acc', color: '#ffffff', fontSize: \"13px\", fontFamily: `Montserrat` }}\n        >\n          This website uses cookies.\n        </CookieConsent>\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import './global.css';\n\nimport Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    // To fix gatsby-remark-autolink-headers:\n    'a.anchor': {\n      boxShadow: 'none',\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          Copyright © 2019 Bartłomiej Widlarz\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport profilePic from '../../content/assets/profile-pic.jpg';\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <img\n              src={profilePic}\n              alt={`Bart Widlarz`}\n              style={{\n                marginRight: rhythm(1 / 2),\n                width: rhythm(2),\n                height: rhythm(2),\n                borderRadius: '50%',\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who works remotely in software development as a developer and leader.\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                Twitter\n              </a>\n              {` `}\n              <a href={`https://linkedin.com/in/widlarz`}>\n                Linkedin\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","module.exports = __webpack_public_path__ + \"static/profile-pic-b505cf9453dbf3920724f797ba1159d4.jpg\";"],"sourceRoot":""}