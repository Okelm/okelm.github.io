{"data":{"site":{"siteMetadata":{"title":"Bart Widlarz's Blog","author":"Bart Widlarz"}},"markdownRemark":{"id":"0fe21fa4-71ef-56c9-9c3a-5b7647b4369e","excerpt":"Some time ago I was invited to take part in React Native workshops as a mentor, \nwhich means I was supposed to help other developers go through tasks and answer…","html":"<p>Some time ago I was invited to take part in React Native workshops as a mentor,\nwhich means I was supposed to help other developers go through tasks and answer their questions.\nThe workshops, centered on various topics are called DevMeetings and are run across Poland every couple of weeks.\nLet’s take a look at some of the topics we covered there:</p>\n<h4 id=\"what-they-learned\"><a href=\"#what-they-learned\" aria-label=\"what they learned permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What They learned</h4>\n<ul>\n<li>Expo</li>\n</ul>\n<p>It’s a very convenient tool to use especially if you only have a\ncouple of hours to present key issues related to a specific topic and\ndon’t want to waste that time on configuration. It allows you to go from zero to\nrunning the app on a device in minutes. Also, you don’t need a Mac to run an app on iPhone.</p>\n<ul>\n<li>Props, state</li>\n</ul>\n<p>The basics of React are all about these two. Props allow you to compose components\nby passing data from parents to children:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Text <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ExampleComponent</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>And state gives components the ability to control encapsulated data.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TextInput <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextInput</span> \n         <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> \n         <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> \n         <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> \n        <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">value</code> state here is neither visible to the parent component nor is it injected as props are. But it’s pretty common\nto set an initial state for state based on props:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>initValue <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>  <span class=\"token punctuation\">}</span>\n  \n<span class=\"token operator\">...</span></code></pre></div>\n<p>As of React Native 0.57.5 where React Hooks were introduced you can use state\nwithin functional components:</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> TextInput <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ExampleForm</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> setValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextInput</span> \n         <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> \n         <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span></span> \n         <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span></span> \n        <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I personally opt for functions over classes to omit the confusion with <code class=\"language-text\">this</code> which is mutated over time by React.</p>\n<ul>\n<li>Forms and AsyncStorage</li>\n</ul>\n<p>Forms are the bread and butter of every frontend developer so it makes sense to\npresent the idiomatic way of writing them in React Native. This was the place\nwhere we used the power of state for the purpose of saving inputs on each\nkeystroke and then push it to AsyncStorage on form submit.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AsyncStorage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">,</span> form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">const</span> form <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>AsyncStorage is not the perfect solution for this case, yet the API is pretty\nstraight forward and gives a lot of functionality without much boilerplate.</p>\n<ul>\n<li>Navigation through an app</li>\n</ul>\n<p>Or as a web developer would call it <code class=\"language-text\">routing</code>. With React-navigation you set up routing almost as you would do it on the web.\nA set of screens that you access via navigation to an established route. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStackNavigator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-navigation'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Navigator <span class=\"token operator\">=</span> <span class=\"token function\">createStackNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  List<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> List <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  Detail<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> Detail <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span></code></pre></div>\n<p>Paths are optional, which may come as a surprise to web devs\nat the beginning but quickly becomes clear when they notice that we are in the world of mobile apps - though it’s possible to operate on paths and it’s common to use them when you open an app from the link.</p>\n<h4 id=\"what-ive-noticed\"><a href=\"#what-ive-noticed\" aria-label=\"what ive noticed permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What I’ve noticed</h4>\n<p>How many things you can do when you are passionate and curious. Mr obvious\nstrikes again, I know, but it hammered home to me during the last workshops. The\ntasks given to people are mostly far from being mundane and obvious to\nparticipants. It challenges them and gives them additional motivation to build something new.</p>\n<p>Also, there are many things I thought I’d known before I was asked to explain\nthem in detail, like differences between div and Text, or\nintricate details about Expo </p>\n<p>Last but not least, I had the opportunity to do pair programming for a couple of hours, with many developers,\non many different issues. Yes, it was tiring, but whether you like it or not pair programming is simply an effective way of\nsolving a couple of software development problems by: </p>\n<ul>\n<li>Boosting the distribution of knowledge. Diminish the number of bottlenecks in the\norganization by encouraging other people to sit together and share their knowledge\nand work on solutions.</li>\n<li>Alleviating communication bias. Real time meetings, especially when you see other\npeople, are way more dynamic and allow you to express more with fewer words. Even\nthough your wording might not be as specific as if you wrote them down, you have the\nability to express yourself through gestures and intonation, which can convey emotions.\nDoubt, apprehension, excitement or cheer just to name a few. </li>\n<li>Tightening up the feedback loop. You don’t have to wait until 2 days after you’ve finished development\nto get corrective feedback which then forces you to redesign the solution. And\nthen you think that the worst thing here is that the new solution is simply\nbetter, if only you’d got it earlier… </li>\n</ul>\n<p>To sum up, the workshops were beneficial for both mentors and mentees. I’m looking forward to the next workshops!</p>","frontmatter":{"title":"React Native workshops","date":"March 01, 2019","description":"Running workshops"}}},"pageContext":{"slug":"/workshops/","previous":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello!"}},"next":{"fields":{"slug":"/1on1/"},"frontmatter":{"title":"1-on-1 Meetings part 1, What"}}}}